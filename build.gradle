buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.15-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // (1) querydsl 플러그인을 추가합니다.
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // (2) 라이브러리 dependency를 추가합니다.
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//tasks.named('test') {
test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/target/generated-sources/java" // (3) querydsl에서 사용할 경로를 선언합니다.

querydsl { // (4) querydsl 설정을 추가합니다. JPA 사용 여부와 사용할 경로를 지정하였습니다.
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets { // (5) build시 사용할 sourceSet을 추가합니다.
    main.java.srcDir querydslDir
}
configurations { // (6) querydsl이 compileClassPath를 상속하도록 설정합니다.
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl { // (7) querydsl 컴파일시 사용할 옵션을 설정합니다.
    options.annotationProcessorPath = configurations.querydsl
}
